# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t8V-rAYixS-hnrU4a1sjMjB6gmc4GVdW

# 다시 돌리면 결과가 달라지거나 오류가 날 수 있으니 실행시키지 말아주세요.
"""

import os
import glob

##.asm이 아닌 파일 삭제
def delete_files_except_asm(directory):
    files = glob.glob(os.path.join(directory, "*"))

    for file in files:
        if not file.endswith(".asm"):
            os.remove(file)
            print(f"Deleted {file}.")

directory_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/train_data/train"

delete_files_except_asm(directory_path)

import pandas as pd

csv_file_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/trainLabels.csv"
train_label = pd.read_csv(csv_file_path)
print(train_label)

"""파일 개수 10868개, train_label의 길이 10868.
모두 정상적으로 압축해제된듯함.
"""

train_label["Class"].value_counts()

import shutil

# 분류가 5번인 파일들의 파일 이름
files_to_move = (train_label[train_label['Class'] == 5]['Id']+'.asm').tolist()

# 파일을 옮길 폴더
destination_folder_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/class_5"

# 파일 옮기기
source_folder_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/train_data/train"  # 파일들이 위치한 폴더 경로
for file_name in files_to_move:
    source_file_path = os.path.join(source_folder_path, file_name)
    destination_file_path = os.path.join(destination_folder_path, file_name)

    if os.path.exists(source_file_path):
        shutil.move(source_file_path, destination_file_path)
        print(f"{file_name}를 {destination_folder_path}로 옮겼습니다.")
    else:
        print(f"{source_file_path}가 존재하지 않습니다.")

#class.value_counts()
print(len(train_label), train_label["Class"].value_counts())

def count_files_in_directory(directory):
    files = os.listdir(directory)

    return len(files)

directory_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/train_data/train"

file_count = count_files_in_directory(directory_path)
print(f"train 폴더 내 파일 개수: {file_count}")

"""10868-42(class_5)=10826"""

directory_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/class_5"

file_count = count_files_in_directory(directory_path)
print(f"class_5 폴더 내 파일 개수: {file_count}")

"""class5에 해당하는 파일들 정상적으로 옮겨짐."""

import random

# class 5가 아닌 행 선택
selected_rows = train_label[train_label.iloc[:, 1] != 5]

# 각 500개씩 랜덤하게 추출
random_samples = selected_rows.groupby(selected_rows.iloc[:, 1]).apply(lambda x: x.sample(n=200))

# 새로운 데이터프레임 생성
new_train_label = random_samples.reset_index(drop=True)

print(new_train_label['Class'].value_counts())

files_to_move = (new_train_label['Id']+'.asm').tolist()

# 파일을 옮길 폴더 경로 설정
destination_folder_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/raw_asm_data"

# 파일 옮기기
source_folder_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/train_data/train"  # 파일들이 위치한 폴더 경로
i=0
for file_name in files_to_move:
    source_file_path = os.path.join(source_folder_path, file_name)
    destination_file_path = os.path.join(destination_folder_path, file_name)

    if os.path.exists(source_file_path):
        shutil.move(source_file_path, destination_file_path)
        #print(f"{file_name}를 {destination_folder_path}로 옮겼습니다.")
        i+=1

print(i,'개 옮겼습니다.')

directory_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/raw_asm_data"

file_count = count_files_in_directory(directory_path)
print(f"raw_asm_data 폴더 내 파일 개수: {file_count}")

# 새로운 데이터프레임을 CSV 파일로 저장
new_csv_file_path = "/content/drive/MyDrive/Ping!_AI악성코드분류기/microsoft/raw_asm_data/train_label_200.csv"
new_train_label.to_csv(new_csv_file_path, index=False)

file_count = count_files_in_directory(directory_path)
print(f"raw_asm_data 폴더 내 파일 개수: {file_count}")

"""**# 결론**

모델링에 필요한 데이터
- 8개 class의 각 200개 .asm파일 (1600개)
- 해당 1600개 파일의 label .csv파일 (1개)

은 raw_asm_data폴더(1601개)에 저장되어 있음.

//

라벨링은 이후 모델링 과정에서 해야할듯
"""

